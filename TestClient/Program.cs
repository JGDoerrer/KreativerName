using System;
using System.Net.Sockets;
using System.Threading;
using KreativerName.Networking;

namespace TestClient
{
    class Program
    {
        static Client client;

        static void Main(string[] args)
        {
            TcpClient tcp = new TcpClient();
            tcp.Connect("Josuas-Pc", 8875);

            client = new Client(tcp);
            client.BytesRecieved += BytesRecieved;
            new Thread(client.StartRecieve).Start();

            while (true)
            {
                if (client.Connected)
                {
                    Console.Write("> ");
                    string msg = Console.ReadLine();
                    // msg = "1002BD58BBCA644510EEAA739B737633413010C427D858637D09632F8BB28160E81B0882B88F2108A61A6D6060BA18FB00829818E8CEF99DE9FABA4EF57C07B61DE7DF81A66AEAF4A5AABBEAABEA7E90527AEFF1938F9EFDF8C9E75F3CF9783AFD7DFBD424D96FA30A4E5DD281EB5CD283EB5D32801B5C52CF7A6EE25C690A4E5DD281EB5CD2832B54BA01DC10E64A95DE52CDAABE566CB696622DF5B5146B69DAF4DF7E92EE4EBFB3BC50932824366AC4D8424D9220D9764C61C5B67A87D53BD730369BE7BCCEE81A0CE00697F4E07A9774E03A97447D4D126D321A4794F34895374875569DEF73DCD98B737F3D6CEBED9D8EB7790237B9A45EF96AC714724C61C72447E826705358EFBE9C975D6C0437566BB95D6F5C6C4DF2C5A392571E4EDEB0017D069F67C03C65D3EE0935121F4ED4A5F751B1494731297127FEC77149CB7171FC475D7A1F15F7F1E248DFBAD8D0E40A46439A8E545BE28D37957DAED6E5EA43563A646D88403EE4746F31A9AD31D941C36C9B3266911B2A1DBB723051C0E5D4199B542B8F3E6AC4A8B13A9DBCCEBB29ED64861BB998908B6903A4EB015CA12233B8D9FB2CE01697D4FADE106B381128B9A1B2D31DC01DBCCF0C6EF63E5C6BA4F4CAD2875228672B1456A89F85C20AF5B350589125D901EA3A22D62BBD5BF1B2CA82F0515A0285022E6BDFC18ACEADE86085F559A04BA12651486CC766F49ED3A67BAABC5C2A4FE9DDAEB8FB2284F2CAA04540AB31686D9E09DCE47D0EE00E2E7900ED0A358940222E5148EC94176857A8F96A0FDB6DE6E27F390A3E4CF7081B9C9918361855193612C3C680390ABD196C70FDD892BD1836F415C2863464386D808DD4001B4AB091D5FDCFD70F219050BE68358084124824020965184BE90A00E0328F01401B0040190046E85BA854413BBB248E94CAEE2CD168F7C12511164CC3191ACE2EA9EA8F1C050BD65ADCD2085336738456B32246A668F4A6C9ADA8EA983C2A36934CF837B98607CC7A70C904C9667B553369F4EED1ADA86A2F8DA9627149F47293C4483010AD225C63F41B8D08B16154C4321B55E3424C668B8F8A6592E1C6992BD4FA446C95EA39C2242BB8D525C71377D6B550492F4EDCD99E424D324332BB648164F17916CCB3F85A0BD6DA749EA14F9E270761C47AB322E603913B6876E71A1EA159A1D2ADF8B67A9F15DF56B7E288558F6EC50A6E75C91D7A17BA5D2A73CAFD3AF1AF2955CA8D2E71D7A54AB951852D0D1536A74AAEB0F95AD7922AE5AA5429942AF546A9F2BA0A7BE79592EA57AE7185531C55B43B15242519E144C4801D21D5524184DDC14F3042F40E84274A299C18F9CABF53615312564AD49CDEB35B54E95D567C2BD420E1AC4BA1A2470063A1A22BBEADDE27BEE96E6F63317A4562046C49267AD5CE1B1BBFC3ED14B99C3C29E90927BDFD44F4927421942EF40500B650DBB12A81288331A714827025C0D67F00CB85DAEA55225202F53C6AC1A8C5FBD4A989D297522A504A0579C7EA6445254015FD9640B81CE3328A4ABF9D62E7FC6D469FAD64E3226E816471DFA84B3F2E7628512B15179CBA770A99942E8B142A6D844A1BE1528B8A4A2E84958AD38C44B1ED9490D2523E53B9CA651D17294A45CA4E71BAE2725DA88DAAAEDD7C9152BA4809BFB6D0B5495AAE4D7CFDA217878E5F1CE86DA5E9C521FAA9215BF4F7D1251324B663F1DFC1253324E61B23562E54F421B42FD4668E4D12BD9BE41917CCBCB85DD1CFA48ABFFAC9E1B533FDEC8FA76F3E7FFAEB973FFDFDDDB73F7CFAF0979F7FFBE0FBBFFEFCFDD1A3C7EF7FF3D53BCF9FFD0B";
                    // msg = "0001050000004A6F737561";

                    client.Send(StringToByteArrayFastest(msg));
                }

                Thread.Sleep(1);
            }
        }

        private static void BytesRecieved(Client client, byte[] bytes)
        {
            Console.WriteLine(BitConverter.ToString(bytes));

            RequestHandler.HandleRequest(client, bytes);
        }

        // https://stackoverflow.com/questions/321370/how-can-i-convert-a-hex-string-to-a-byte-array
        public static byte[] StringToByteArrayFastest(string hex)
        {
            if (hex.Length % 2 == 1)
                return null;

            byte[] arr = new byte[hex.Length >> 1];

            for (int i = 0; i < hex.Length >> 1; ++i)
            {
                arr[i] = (byte)((GetHexVal(hex[i << 1]) << 4) + (GetHexVal(hex[(i << 1) + 1])));
            }

            return arr;
        }

        public static int GetHexVal(char hex)
        {
            int val = hex;
            //For uppercase A-F letters:
            return val - (val < 58 ? 48 : 55);
            //For lowercase a-f letters:
            //return val - (val < 58 ? 48 : 87);
            //Or the two combined, but a bit slower:
            //return val - (val < 58 ? 48 : (val < 97 ? 55 : 87));
        }
    }
}
